Program id: 1
Execution Stack: ( Ref(Int) v; ( new(v, 20); ( Ref(Ref(Int)) a; ( new(a, v); ( new(v, 30); ( new(a, v); print(rH(rH(a))) ) ) ) ) ) )
Symbols Table: 
Out: 
Heap: 

Program id: 1
Execution Stack: Ref(Int) v, ( new(v, 20); ( Ref(Ref(Int)) a; ( new(a, v); ( new(v, 30); ( new(a, v); print(rH(rH(a))) ) ) ) ) )
Symbols Table: 
Out: 
Heap: 

Program id: 1
Execution Stack: ( new(v, 20); ( Ref(Ref(Int)) a; ( new(a, v); ( new(v, 30); ( new(a, v); print(rH(rH(a))) ) ) ) ) )
Symbols Table: v -> (0, Int), 
Out: 
Heap: 

Program id: 1
Execution Stack: new(v, 20), ( Ref(Ref(Int)) a; ( new(a, v); ( new(v, 30); ( new(a, v); print(rH(rH(a))) ) ) ) )
Symbols Table: v -> (0, Int), 
Out: 
Heap: 

Program id: 1
Execution Stack: ( Ref(Ref(Int)) a; ( new(a, v); ( new(v, 30); ( new(a, v); print(rH(rH(a))) ) ) ) )
Symbols Table: v -> (1, Int), 
Out: 
Heap: 1 -> 20, 

Program id: 1
Execution Stack: Ref(Ref(Int)) a, ( new(a, v); ( new(v, 30); ( new(a, v); print(rH(rH(a))) ) ) )
Symbols Table: v -> (1, Int), 
Out: 
Heap: 1 -> 20, 

Program id: 1
Execution Stack: ( new(a, v); ( new(v, 30); ( new(a, v); print(rH(rH(a))) ) ) )
Symbols Table: a -> (0, Ref(Int)), v -> (1, Int), 
Out: 
Heap: 1 -> 20, 

Program id: 1
Execution Stack: new(a, v), ( new(v, 30); ( new(a, v); print(rH(rH(a))) ) )
Symbols Table: a -> (0, Ref(Int)), v -> (1, Int), 
Out: 
Heap: 1 -> 20, 

Program id: 1
Execution Stack: ( new(v, 30); ( new(a, v); print(rH(rH(a))) ) )
Symbols Table: a -> (2, Ref(Int)), v -> (1, Int), 
Out: 
Heap: 1 -> 20, 2 -> (1, Int), 

Program id: 1
Execution Stack: new(v, 30), ( new(a, v); print(rH(rH(a))) )
Symbols Table: a -> (2, Ref(Int)), v -> (1, Int), 
Out: 
Heap: 1 -> 20, 2 -> (1, Int), 

Program id: 1
Execution Stack: ( new(a, v); print(rH(rH(a))) )
Symbols Table: a -> (2, Ref(Int)), v -> (3, Int), 
Out: 
Heap: 1 -> 20, 2 -> (1, Int), 3 -> 30, 

Program id: 1
Execution Stack: new(a, v), print(rH(rH(a)))
Symbols Table: a -> (2, Ref(Int)), v -> (3, Int), 
Out: 
Heap: 1 -> 20, 2 -> (1, Int), 3 -> 30, 

Program id: 1
Execution Stack: print(rH(rH(a)))
Symbols Table: a -> (4, Ref(Int)), v -> (3, Int), 
Out: 
Heap: 1 -> 20, 2 -> (1, Int), 3 -> 30, 4 -> (3, Int), 

Program id: 1
Execution Stack: 
Symbols Table: a -> (4, Ref(Int)), v -> (3, Int), 
Out: 30 
Heap: 3 -> 30, 4 -> (3, Int), 

