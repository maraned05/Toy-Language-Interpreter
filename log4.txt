Program id: 3
Execution Stack: String varf, ( varf = test.in; ( openFile(varf); ( Int varc; ( readFile(varf, varc); ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) ) ) ) ) )
Symbols Table: 
Out: 
Heap: 

Program id: 3
Execution Stack: ( varf = test.in; ( openFile(varf); ( Int varc; ( readFile(varf, varc); ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) ) ) ) ) )
Symbols Table: varf -> , 
Out: 
Heap: 

Program id: 3
Execution Stack: varf = test.in, ( openFile(varf); ( Int varc; ( readFile(varf, varc); ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) ) ) ) )
Symbols Table: varf -> , 
Out: 
Heap: 

Program id: 3
Execution Stack: ( openFile(varf); ( Int varc; ( readFile(varf, varc); ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) ) ) ) )
Symbols Table: varf -> test.in, 
Out: 
Heap: 

Program id: 3
Execution Stack: openFile(varf), ( Int varc; ( readFile(varf, varc); ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) ) ) )
Symbols Table: varf -> test.in, 
Out: 
Heap: 

Program id: 3
Execution Stack: ( Int varc; ( readFile(varf, varc); ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) ) ) )
Symbols Table: varf -> test.in, 
Out: 
Heap: 

Program id: 3
Execution Stack: Int varc, ( readFile(varf, varc); ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) ) )
Symbols Table: varf -> test.in, 
Out: 
Heap: 

Program id: 3
Execution Stack: ( readFile(varf, varc); ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) ) )
Symbols Table: varf -> test.in, varc -> 0, 
Out: 
Heap: 

Program id: 3
Execution Stack: readFile(varf, varc), ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) )
Symbols Table: varf -> test.in, varc -> 0, 
Out: 
Heap: 

Program id: 3
Execution Stack: ( print(varc); ( readFile(varf, varc); ( print(varc); closeFile(varf) ) ) )
Symbols Table: varf -> test.in, varc -> 2, 
Out: 
Heap: 

Program id: 3
Execution Stack: print(varc), ( readFile(varf, varc); ( print(varc); closeFile(varf) ) )
Symbols Table: varf -> test.in, varc -> 2, 
Out: 
Heap: 

Program id: 3
Execution Stack: ( readFile(varf, varc); ( print(varc); closeFile(varf) ) )
Symbols Table: varf -> test.in, varc -> 2, 
Out: 2 
Heap: 

Program id: 3
Execution Stack: readFile(varf, varc), ( print(varc); closeFile(varf) )
Symbols Table: varf -> test.in, varc -> 2, 
Out: 2 
Heap: 

Program id: 3
Execution Stack: ( print(varc); closeFile(varf) )
Symbols Table: varf -> test.in, varc -> 4, 
Out: 2 
Heap: 

Program id: 3
Execution Stack: print(varc), closeFile(varf)
Symbols Table: varf -> test.in, varc -> 4, 
Out: 2 
Heap: 

Program id: 3
Execution Stack: closeFile(varf)
Symbols Table: varf -> test.in, varc -> 4, 
Out: 2 4 
Heap: 

Program id: 3
Execution Stack: 
Symbols Table: varf -> test.in, varc -> 4, 
Out: 2 4 
Heap: 

